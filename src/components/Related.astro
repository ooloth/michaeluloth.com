---
import { type Bookmark, type Draft, type Note, type Post, type SinglePage } from '../utils/collections'
import { getNotes } from '../utils/notes'
import { getPosts } from '../utils/posts'
import { getBookmarks } from '../utils/bookmarks'
import { getAllEntriesWithSameTagsAsEntry } from '../utils/tags'
import { getDrafts } from '../utils/drafts'
import { getIconHtml } from '../actions/filterNotes'

type Props = {
  entry: Post | Draft | Note | Bookmark | SinglePage
}

const { entry } = Astro.props

const entriesWithSameTags = getAllEntriesWithSameTagsAsEntry(entry, [
  ...(await getPosts()),
  ...(await getBookmarks()),
  ...(await getDrafts()),
  ...(await getNotes()),
])

const hasRelatedEntries = Object.keys(entriesWithSameTags).length > 0
---

{
  hasRelatedEntries ? (
    <footer class="markdown mt-12 border-t-[1px] border-zinc-600 ">
      {Object.entries(entriesWithSameTags).map(([tag, entriesWithTag]) => (
        <>
          <h2 class="text-red-500">
            Related to <span class="text-zinc-400">#{tag}</span>
          </h2>
          <ul>
            {entriesWithTag.map(entry => (
              <li>
                <a href={`/${entry.id}/`} class="link-nav">
                  {entry.data.title}
                </a>
                <span class="ml-1" set:html={getIconHtml(entry)} />
              </li>
            ))}
          </ul>
        </>
      ))}
    </footer>
  ) : null
}
