---
import type { Bookmark, Draft, Note, Post, TIL } from '../utils/collections'
import { isNote } from '../utils/notes'
import { isPost } from '../utils/posts'
import PaginationLink from './PaginationLink.astro'

type Props = {
  entry: Post | TIL | Draft | Note | Bookmark | null
  prev: Post | TIL | Draft | Note | Bookmark | null
  next: Post | TIL | Draft | Note | Bookmark | null
}

const { entry, prev, next } = Astro.props

/**
 * Ensure pagination links guide users through pages that go together (i.e. published writing vs. rough notes) and
 * don't jump between different types of content.
 */
const isIndexedOnSamePageAsEntry = (other: Post | TIL | Draft | Note | Bookmark | null): boolean => {
  // Skip the check if either entry or other is null
  if (!entry || !other) return true

  const isIndexedOnHomePage = (item: Post | TIL | Draft | Note | Bookmark): boolean =>
    item.collection === 'tils' || isPost(item)

  const isIndexedOnNotesPage = (item: Post | TIL | Draft | Note | Bookmark): boolean =>
    item.collection === 'drafts' || item.collection === 'bookmarks' || isNote(item)

  return (
    (isIndexedOnHomePage(other) && isIndexedOnHomePage(entry)) ||
    (isIndexedOnNotesPage(other) && isIndexedOnNotesPage(entry))
  )
}

const showPrevLink = prev && isIndexedOnSamePageAsEntry(prev)
const showNextLink = next && isIndexedOnSamePageAsEntry(next)
---

<nav class="mt-20 flex flex-col gap-5 md:flex-row">
  {showPrevLink ? <PaginationLink entry={prev} direction="Previous" /> : <div class="basis-1/2" />}
  {showNextLink ? <PaginationLink entry={next} direction="Next" /> : <div class="basis-1/2" />}
</nav>
