---
import { getCollection } from 'astro:content'

import fetchItunesItems from '../../lib/itunes/fetchItunesItems'
import fetchTmdbList from '../../lib/tmdb/fetchTmdbList'
import Main from '../layouts/Main.astro'
import { getMachineReadableDate } from '../utils/dates'

const title = 'Likes'

const iTunesLists = await getCollection('itunes')
const bookList = iTunesLists.find(list => list.id === 'books')?.data
const albumList = iTunesLists.find(list => list.id === 'albums')?.data
const podcastList = iTunesLists.find(list => list.id === 'podcasts')?.data

const categories = await Promise.all([
  { title: 'TV Shows', items: await fetchTmdbList(import.meta.env.TMDB_TV_LIST_ID, 'tv'), source: 'TMDB' },
  { title: 'Movies', items: await fetchTmdbList(import.meta.env.TMDB_MOVIE_LIST_ID, 'movie'), source: 'TMDB' },
  { title: 'Books', items: await fetchItunesItems(bookList, 'ebook', 'ebook'), source: 'iTunes' },
  { title: 'Albums', items: await fetchItunesItems(albumList, 'music', 'album'), source: 'iTunes' },
  { title: 'Podcasts', items: await fetchItunesItems(podcastList, 'podcast', 'podcast'), source: 'iTunes' },
])
---

<Main title={title} description="TV shows, movies, albums, books and podcasts I liked a lot.">
  <h1 class="sr-only">{title}</h1>

  {
    categories.map(category => (
      <section>
        <h2 class="heading text-3xl">{category.title}</h2>

        <ul class="flex relative overflow-x-auto overflow-y-hidden hide-scrollbar">
          {category.items.map(item => (
            <li class="flex-none mr-10 w-48">
              <a
                href={item.link || 'https://youtu.be/dQw4w9WgXcQ'}
                aria-label={`Visit the ${category.source} page for "${item.title}" in a new window.`}
                class="text-center leading-tight font-semibold text-zinc-900 dark:text-zinc-300"
              >
                {/*  decorative, so hide from screen readers */}
                <img
                  src={item.imageUrl}
                  alt=""
                  width={300}
                  height={category.title === 'Albums' || category.title === 'Podcasts' ? 300 : 435}
                  class="image"
                />

                <p class="mt-3 text-[1.05rem]">{item.title}</p>

                {'artist' in item && item.artist && <p class="mt-[0.35rem] text-sm">{item.artist}</p>}

                {item.date && (
                  <time datetime={getMachineReadableDate(item.date)} class="block mt-[0.35rem] text-sm">
                    ({new Date(item.date).getFullYear()})
                  </time>
                )}
              </a>
            </li>
          ))}
        </ul>
      </section>
    ))
  }
</Main>
