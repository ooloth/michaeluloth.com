---
import site from '../data/site'
import Main from '../layouts/Main.astro'
import type { Post } from '../utils/collections'
import { getHumanReadableDate, getMachineReadableDate } from '../utils/dates'
import { getPosts } from '../utils/posts'

const posts = await getPosts()

const isScheduled = (post: Post): boolean => (post.data.date ? Date.parse(String(post.data.date)) > Date.now() : false)
---

<Main title={site.title} description={site.description.site}>
  <h1 class="sr-only">{site.title}</h1>

  <section>
    <h2 class="sr-only">Latest Posts</h2>

    <ol reversed class="columns-xl gap-x-24">
      {
        posts.map(post => {
          // TODO: my goal is to group the posts under a heading for each topic (tag) or perhaps the even-higher level category
          // (e.g. Languages, Frameworks, etc) so I can do the same on the notes page and start publishing small notes quickly
          // without worrying about nesting them hierarchically or inserting them into a topic note. All hidden "drafts" could
          // just be immediately published as rough note outlines which I can expand on later if worthwhile. Otherwise, a quick
          // blurb and a few links would be enough to share the idea in a way that would be helpful to future me, at the very least.
          // TODO: read a "category" property instead of the first tag?
          // const primaryTag =
          //   (post.data.tags ?? ['untagged'])
          //     .filter(tag => tag !== 'post')
          //     .map(tag => tag.replace('topic/', ''))
          //     .at(0) ?? 'untagged'
          // console.log('primaryTag:', primaryTag)

          const date = post.data.date || Date.now()

          return (
            <li class="flex flex-col md:flex-row md:items-baseline mb-7 md:mb-4">
              <time datetime={getMachineReadableDate(date)} class="timestamp md:min-w-[7rem]">
                {getHumanReadableDate(date)}
              </time>

              <a href={`/${post.id}/`} class="group outline-none">
                <span class="link">{post.data.title || post.id}</span>
                {isScheduled(post) ? <span class="ml-1">ðŸ“†</span> : null}
              </a>
            </li>
          )
        })
      }
    </ol>
  </section>
</Main>
